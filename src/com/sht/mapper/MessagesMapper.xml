<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sht.mapper.MessagesMapper">
  <resultMap id="BaseResultMap" type="com.sht.po.Messages">
    <id column="ID" jdbcType="CHAR" property="id" />
    <result column="TEXT" jdbcType="CHAR" property="text" />
    <result column="CREATETIME" jdbcType="TIMESTAMP" property="createtime" />
    <result column="STATUS" jdbcType="SMALLINT" property="status" />
    <result column="USERS" jdbcType="CHAR" property="users" />
    <result column="MESSAGE" jdbcType="CHAR" property="message" />
    <result column="GOODS" jdbcType="CHAR" property="goods" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, TEXT, CREATETIME, STATUS, USERS, MESSAGE, GOODS
  </sql>
  <select id="selectByExample" parameterType="com.sht.po.MessagesExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from MESSAGES
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from MESSAGES
    where ID = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from MESSAGES
    where ID = #{id,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.sht.po.MessagesExample">
    delete from MESSAGES
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sht.po.Messages">
    insert into MESSAGES (ID, TEXT, CREATETIME, 
      STATUS, USERS, MESSAGE, 
      GOODS)
    values (#{id,jdbcType=CHAR}, #{text,jdbcType=CHAR}, #{createtime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=SMALLINT}, #{users,jdbcType=CHAR}, #{message,jdbcType=CHAR}, 
      #{goods,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sht.po.Messages">
    insert into MESSAGES
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="text != null">
        TEXT,
      </if>
      <if test="createtime != null">
        CREATETIME,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="users != null">
        USERS,
      </if>
      <if test="message != null">
        MESSAGE,
      </if>
      <if test="goods != null">
        GOODS,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=CHAR},
      </if>
      <if test="text != null">
        #{text,jdbcType=CHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=SMALLINT},
      </if>
      <if test="users != null">
        #{users,jdbcType=CHAR},
      </if>
      <if test="message != null">
        #{message,jdbcType=CHAR},
      </if>
      <if test="goods != null">
        #{goods,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sht.po.MessagesExample" resultType="java.lang.Long">
    select count(*) from MESSAGES
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update MESSAGES
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=CHAR},
      </if>
      <if test="record.text != null">
        TEXT = #{record.text,jdbcType=CHAR},
      </if>
      <if test="record.createtime != null">
        CREATETIME = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        STATUS = #{record.status,jdbcType=SMALLINT},
      </if>
      <if test="record.users != null">
        USERS = #{record.users,jdbcType=CHAR},
      </if>
      <if test="record.message != null">
        MESSAGE = #{record.message,jdbcType=CHAR},
      </if>
      <if test="record.goods != null">
        GOODS = #{record.goods,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update MESSAGES
    set ID = #{record.id,jdbcType=CHAR},
      TEXT = #{record.text,jdbcType=CHAR},
      CREATETIME = #{record.createtime,jdbcType=TIMESTAMP},
      STATUS = #{record.status,jdbcType=SMALLINT},
      USERS = #{record.users,jdbcType=CHAR},
      MESSAGE = #{record.message,jdbcType=CHAR},
      GOODS = #{record.goods,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sht.po.Messages">
    update MESSAGES
    <set>
      <if test="text != null">
        TEXT = #{text,jdbcType=CHAR},
      </if>
      <if test="createtime != null">
        CREATETIME = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=SMALLINT},
      </if>
      <if test="users != null">
        USERS = #{users,jdbcType=CHAR},
      </if>
      <if test="message != null">
        MESSAGE = #{message,jdbcType=CHAR},
      </if>
      <if test="goods != null">
        GOODS = #{goods,jdbcType=CHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sht.po.Messages">
    update MESSAGES
    set TEXT = #{text,jdbcType=CHAR},
      CREATETIME = #{createtime,jdbcType=TIMESTAMP},
      STATUS = #{status,jdbcType=SMALLINT},
      USERS = #{users,jdbcType=CHAR},
      MESSAGE = #{message,jdbcType=CHAR},
      GOODS = #{goods,jdbcType=CHAR}
    where ID = #{id,jdbcType=CHAR}
  </update>
</mapper>